version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "YourStrongPassword123!"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrongPassword123! -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  integration-tests:
    build:
      context: ../../..
      dockerfile: tests/IntegrationTests/UserManagement.IntegrationTests/Dockerfile
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=UserManagementTestDb;User Id=sa;Password=YourStrongPassword123!;TrustServerCertificate=true;
      - ConnectionStrings__Redis=redis:6379
      - ASPNETCORE_ENVIRONMENT=Testing
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

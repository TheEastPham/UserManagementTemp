# ================================
# Build Stage
# ================================
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /app

# Copy solution and project files first for layer caching
COPY src/Backend/UserManagement.sln ./src/Backend/
COPY src/Backend/UserManagement/UserManagement.API/UserManagement.API.csproj ./src/Backend/UserManagement/UserManagement.API/
COPY src/Backend/UserManagement/UserManagement.Domain/UserManagement.Domain.csproj ./src/Backend/UserManagement/UserManagement.Domain/
COPY src/Backend/UserManagement/UserManagement.EFCore/UserManagement.EFCore.csproj ./src/Backend/UserManagement/UserManagement.EFCore/
COPY src/Backend/Gateways/ApiGateway/ApiGateway.csproj ./src/Backend/Gateways/ApiGateway/
# Không copy các folder test vào image production

# Restore dependencies
WORKDIR /app/src/Backend
RUN dotnet restore UserManagement.sln

# Copy all source code (không copy tests)
COPY src/Backend/ ./

# Build the application
WORKDIR /app/src/Backend/UserManagement/UserManagement.API
RUN dotnet publish -c Release -o /app/publish

# ================================
# Runtime Stage
# ================================
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime
WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy published application
COPY --from=build /app/publish .

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser
RUN chown -R appuser:appuser /app
USER appuser

# Configure application
EXPOSE 8080
ENV ASPNETCORE_URLS=http://+:8080
ENV ASPNETCORE_ENVIRONMENT=Production

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

ENTRYPOINT ["dotnet", "UserManagement.API.dll"]

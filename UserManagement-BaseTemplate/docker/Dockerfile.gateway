# ================================
# Build Stage
# ================================
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /app

# Copy solution and project files
COPY src/Backend/*.sln ./src/Backend/
COPY src/Backend/Gateways/Base.ApiGateway/*.csproj ./src/Backend/Gateways/Base.ApiGateway/

# Restore dependencies
RUN dotnet restore ./src/Backend/Gateways/Base.ApiGateway/Base.ApiGateway.csproj

# Copy source code
COPY src/Backend/Gateways/ ./src/Backend/Gateways/

# Build application
WORKDIR /app/src/Backend/Gateways/Base.ApiGateway
RUN dotnet publish -c Release -o /app/publish --no-restore

# ================================
# Runtime Stage
# ================================
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime
WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy published application
COPY --from=build /app/publish .

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser
RUN chown -R appuser:appuser /app
USER appuser

# Configure application
EXPOSE 80
ENV ASPNETCORE_URLS=http://+:80
ENV ASPNETCORE_ENVIRONMENT=Production

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

ENTRYPOINT ["dotnet", "Base.ApiGateway.dll"]
